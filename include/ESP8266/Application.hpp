////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///	This file is part of the ESP 8266 project.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///	@file 						ESP8266/Application.hpp
///	@author 					Lucas Bremond <lucas@axelspace.com>
///	@date 						9 Oct 2016

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __ESP8266_Application__
#define __ESP8266_Application__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <SmingCore/SmingCore.h>

#include <ESP8266/Configuration.hpp>
#include <ESP8266/ApplicationStorage.hpp>
#include <ESP8266/WiFiManager.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace esp8266
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Application
{

	public:

								Application									( ) ;

								~Application								( ) ;

		bool					isActive									( ) const ;

		void					start										( ) ;
		void					stop										( ) ;

	private:

		bool					wifiEnabled_ ;
		bool					wifiActive_ ;

		bool					statusTimerEnabled_ ;
		Timer					statusTimer_ ;

		ApplicationStorage		applicationStorage_ ;
		WiFiManager				wifiManager_ ;

		void					onPrintStatus								( ) ;

		void					onWifiConnectionSuccess						( ) ;
		void					onWifiConnectionFailure						( ) ;

		void					onClockSet									( ) ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void							init										( ) ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
